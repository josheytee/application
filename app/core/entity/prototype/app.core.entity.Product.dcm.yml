app\core\entity\Product:
    type: entity
    table: Product
    indexes:
        product_price_name_idx:
            columns:
                - id
                - price
                - name
    repositoryClass: app\core\entity\repository\ProductRepository

    fields:
        name:
            type: string
            options:
                comment: 'Product''s name'
        short_description:
            type: text
            length: 320
            options:
                comment: 'Product''s short description'
        description:
            type: text
            length: 700
            options:
                comment: 'Product''s long description'
        condition:
            type: string
            options:
                comment: 'Product''s condition'
                default: new
        type:
            type: string
            options:
                comment: 'Product''s type'
                default: simple
        available:
            type: boolean
            options:
                comment: 'Product''s availability'
        price:
            type: decimal
            scale: 4
            options:
                comment: 'Product''s price'
        show_price:
            type: boolean
            options:
                comment: 'if the price should be shown'
        online_only:
            type: boolean
            options:
                comment: 'if the product should be shown online only'
        active:
            type: boolean
    oneToOne:
        section:
            targetEntity: app\core\entity\Section
            cascade: {  }
            fetch: LAZY
            mappedBy: null
            inversedBy: null
            joinColumns:
                id_section:
                    referencedColumnName: id
            orphanRemoval: false
    lifecycleCallbacks: {  }
