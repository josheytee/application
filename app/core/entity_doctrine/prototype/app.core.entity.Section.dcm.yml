app\core\entity\Section:
  type: entity
  repositoryClass: app\core\entity\repository\SectionRepository
  gedmo:
    tree:
      type: nested
  id:
    id:
      type: integer
      generator:
        strategy: AUTO
  fields:
    title:
      type: string
      length: 64
    active:
      type: boolean
      options:
          default: true
    url:
      type: string
      nullable: true
      length: 255
      options:
          fixed: false
          comment: 'Shop''s url string'
    description:
      type: text
      nullable: false
      length: 65535
      options:
          fixed: false
          comment: 'Shop''s description'
    lft:
      type: integer
      gedmo:
        - treeLeft
    rgt:
      type: integer
      gedmo:
        - treeRight
    lvl:
      type: integer
      gedmo:
        - treeLevel
  manyToOne:
    root:
      targetEntity: Section
      cascade: [ persist ]
      joinColumn:
        name: tree_root
        referencedColumnName: id
        onDelete: CASCADE
      gedmo:
        - treeRoot
    parent:
      targetEntity: Section
      cascade: [ persist ]
      inversedBy: children
      joinColumn:
        name: parent_id
        referencedColumnName: id
        onDelete: CASCADE
      gedmo:
        - treeParent
    shop:
      targetEntity: Shop
      cascade: {  }
      fetch: LAZY
      mappedBy: null
      inversedBy: sections
      joinColumn:
        name: id_shop
        referencedColumnName: id
      orphanRemoval: false
    images:
      targetEntity: app\core\entity\SectionImage
      cascade: [ persist,remove ]
      fetch: LAZY
      mappedBy: null
      inversedBy: section
      joinColumns:
          id_section_image:
              referencedColumnName: id
      orphanRemoval: true
  oneToMany:
    children:
      targetEntity: Section
      mappedBy: parent
      orderBy:
        lft: ASC